version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: car-arbitrage-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: car-arbitrage
    volumes:
      - mongodb_data:/data/db
    networks:
      - car-arbitrage-network

  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/Dockerfile.backend
    container_name: car-arbitrage-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/car-arbitrage
      - PORT=5000
    depends_on:
      - mongodb
    networks:
      - car-arbitrage-network
    volumes:
      - ../data:/app/data

  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: car-arbitrage-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - car-arbitrage-network

  scheduler:
    build:
      context: ../
      dockerfile: deployment/Dockerfile.scheduler
    container_name: car-arbitrage-scheduler
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/car-arbitrage
    depends_on:
      - mongodb
      - backend
    networks:
      - car-arbitrage-network

volumes:
  mongodb_data:

networks:
  car-arbitrage-network:
    driver: bridge